

> git config --global user.name "d3v-donkey"
> git config --global user.email "alexandre_maury@outlook.com"



############### récupérer un depots ####################

> mkdir ~/nom_du_projet
> cd ~/nom_du_projet
> git init
> git pull https://github.com/username/projet_name.git

# modifier le projet

> git add nouveau_fichier.txt
> git commit -m "ajout d'une quatrième ligne dans le fichier"
> git remote add origin https://github.com/d3v-donkey/icecream.git
> git remote -v
> git push --set-upstream origin master

################## Glossaire Git pour les Nuls #########################

    git init : Initialise un dépôt git dans un répertoire vide.
    git status : Affiche le statut des choses dans le répertoire suivi
    git add <NOM DU FICHIER A SUIVRE> : Ajoute un fichier à suivre dans la zone d’attente
    git commit -m "entrez votre message" : Consigner (déclarer) toute modification.
    git remote add origin [adresse URL GitHub ici] : Connecte votre dépôt local avec GitHub.
    git push -u origin nom_branche : Pousse les modifications vers GitHub
    git checkout : basculer vers une (autre) branche
    git -b <NomBranche> : crée une nouvelle branche dans votre dépôt.
    git log: affiche un journal des modifications au dépôt
    git clone <URL PROVENANT DE GITHUB> : clone un projet de votre système à partir de github
    git branch <nom_branche> : crée une copie de la branche master appelée
    git checkout <branch_name> : bascule vers nom_branche comme branche de travail
    git checkout master : bascule la branche vers master
    git branch -a : affiche les branches existantes pour le dépôt particulier
